name: Release
on:
  push:
    tags:
      - v*

env:
  DOTNET_VERSION: "8.0"

jobs:
  build_windows_x64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          cache: 'false'
      - name: Build
        run: |
          $VERSION = "${{ github.ref_name }}"
          $VERSION = $VERSION.Substring(1)
          dotnet publish /p:Version=$VERSION -r win-x64 -c Release
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-x64
          path: "bin/Release/net${{ env.DOTNET_VERSION }}/win-x64/publish/FactorioAchievementPlaytimePatcher.exe"

  build_linux_x64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          cache: 'false'
      - name: Build
        run: |
          VERSION=${{ github.ref_name }}
          VERSION=${VERSION:1}
          dotnet publish /p:Version=${VERSION}  -r linux-x64 -c Release
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-x64
          path: "bin/Release/net${{ env.DOTNET_VERSION }}/linux-x64/native/FactorioAchievementPlaytimePatcher"

  build_osx_x64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          cache: 'false'
      - name: Build
        run: |
          VERSION=${{ github.ref_name }}
          VERSION=${VERSION:1}
          dotnet publish /p:Version=${VERSION}  -r osx-x64 -c Release
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: osx-x64
          path: "bin/Release/net${{ env.DOTNET_VERSION }}/osx-x64/native/FactorioAchievementPlaytimePatcher"

  build_osx_arm64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          cache: 'false'
      - name: Build
        run: |
          VERSION=${{ github.ref_name }}
          VERSION=${VERSION:1}
          dotnet publish /p:Version=${VERSION} -r osx-arm64 -c Release
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: osx-arm64
          path: "bin/Release/net${{ env.DOTNET_VERSION }}/osx-arm64/native/FactorioAchievementPlaytimePatcher"

  create_release:
    runs-on: ubuntu-latest
    needs: [ build_windows_x64, build_linux_x64, build_osx_x64, build_osx_arm64 ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: windows-x64
          path: build/win-x64
      - uses: actions/download-artifact@v4
        with:
          name: linux-x64
          path: build/linux-x64
      - uses: actions/download-artifact@v4
        with:
          name: osx-x64
          path: build/osx-x64
      - uses: actions/download-artifact@v4
        with:
          name: osx-x64
          path: build/osx-arm64
      - name: Make zips
        run: |
          mkdir -p dist
          zip -r "dist/FactorioAchievementPlaytimePatcher-${{ github.ref_name }}-win-x64.zip" -j build/win-x64/*
          tar -cvzf "dist/FactorioAchievementPlaytimePatcher-${{ github.ref_name }}-linux-x64.tar.gz" -C build/linux-x64/ .
          tar -cvzf "dist/FactorioAchievementPlaytimePatcher-${{ github.ref_name }}-osx-x64.tar.gz" -C build/osx-x64/ .
          tar -cvzf "dist/FactorioAchievementPlaytimePatcher-${{ github.ref_name }}-osx-arm64.tar.gz" -C build/osx-arm64/ .
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: "Release ${{ github.ref_name }}"
          files: |
            dist/*.zip
            dist/*.tar.gz